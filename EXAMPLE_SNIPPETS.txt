
//EXAMPLE ONE
//A case with different conditions combined - note: right boundary should move (8-12, >=24)-----------------
//---------------- block 1
/f_input_type
p
/f_depends_on  - choice:  x,y,z
y
/f_variable_determined  - choice:  u,v,w, p,k
u
/superposition  0 - overwrite, 1 - add, 2 - multiply
0
/time bounds [a], if any -  write 0, 0 for eternity; e.g. 0, 1.d6 makes condition only valid for first 1 Ma
0, 1.25e6
/number of segments to follow - not determined automatically
1
/polynomial lines, matching number above
0,160000,0,              1e-4, 1e-7
//---------------- block 1


//---------------- block 2
/f_input_type
p
/f_depends_on  - choice:  x,y,z
y
/f_variable_determined  - choice:  u,v,w, p,k
u
/superposition  0 - overwrite, 1 - add, 2 - multiply
0
/time bounds [a], if any -  write 0, 0 for eternity; e.g. 0, 1.d6 makes condition only valid for first 1 Ma
1.25e6, 1e8
/number of segments to follow - not determined automatically
1
/polynomial lines, matching number above
0,160000,0,              -1e-4, -1e-7
//---------------- block 2


//---------------- block 3
/f_input_type
p
/f_depends_on  - choice:  x,y,z
x
/f_variable_determined  - choice:  u,v,w, p,k
v
/superposition  0 - overwrite, 1 - add, 2 - multiply
0
/time bounds [a], if any -  write 0, 0 for eternity; e.g. 0, 1.d6 makes condition only valid for first 1 Ma
0, 0
/number of segments to follow - not determined automatically
3
/polynomial lines, matching number above
0, 20000,0,                  0
0,60000,2000,              1e-4
60000,90000,60000,           0
//---------------- block 3

//---------------- block 4
/f_input_type
p
/f_depends_on  - choice:  x,y,z
x
/f_variable_determined  - choice:  u,v,w, p,k
w
/superposition  0 - overwrite, 1 - add, 2 - multiply
0
/time bounds [a], if any -  write 0, 0 for eternity; e.g. 0, 1.d6 makes condition only valid for first 1 Ma
0, 0
/number of segments to follow - not determined automatically
3
/polynomial lines, matching number above
0,20000,0,              1e-4
20000,60000,20000,      1e-3
60000,90000,60000,      1e-4
//---------------- block 4


//---------------- block 5
/f_input_type
p
/f_depends_on  - choice:  x,y,z
y
/f_variable_determined  - choice:  u,v,w, p,k
P
/superposition  0 - overwrite, 1 - add, 2 - multiply
0
/time bounds [a], if any -  write 0, 0 for eternity; e.g. 0, 1.d6 makes condition only valid for first 1 Ma
0, 0
/number of segments to follow - not determined automatically
1
/polynomial lines, matching number above
0,80000,0,              9, -1.1e-4
//---------------- block 5

//-----------------------------------------------------------------------------------










//EXAMPLE TWO
//moving uplift - to mimick time-dependent signal, rather keep uplift in place, and move entire mesh over it.
//---------------- block 1
/f_input_type
p
/f_depends_on  - choice:  x,y,z
x
/f_variable_determined  - choice:  u,v,w, p,k
u
/superposition  0 - overwrite, 1 - add, 2 - multiply
0
/time bounds [a], if any -  write 0, 0 for eternity; e.g. 0, 1.d6 makes condition only valid for first 1 Ma
0, 0
/number of segments to follow - not determined automatically
1
/polynomial lines, matching number above
0, 200000,0,             7.5d-4
//---------------- block 1


//---------------- block 2
/f_input_type
p
/f_depends_on  - choice:  x,y,z
x
/f_variable_determined  - choice:  u,v,w, p,k
w
/superposition  0 - overwrite, 1 - add, 2 - multiply
0
/time bounds [a], if any -  write 0, 0 for eternity; e.g. 0, 1.d6 makes condition only valid for first 1 Ma
0, 0
/number of segments to follow - not determined automatically
3
/polynomial lines, matching number above
0, 30000,0,             0
30000, 50000,30000,          5e-4
50000, 200000,50000,             0
//---------------- block 2


//---------------- block 3
/f_input_type
p
/f_depends_on  - choice:  x,y,z
y
/f_variable_determined  - choice:  u,v,w, p,k
w
/superposition  0 - overwrite, 1 - add, 2 - multiply
2
/time bounds [a], if any -  write 0, 0 for eternity; e.g. 0, 1.d6 makes condition only valid for first 1 Ma
0, 0
/number of segments to follow - not determined automatically
3
/polynomial lines, matching number above
0, 30000,0,             0
30000, 50000,30000,          1
50000, 90000,50000,             0
//---------------- block 3
//-----------------------------------------------------------------------------------














//EXAMPLE THREE
//Ramp of uplift to center in both directions
//---------------- block 1
/f_input_type
p
/f_depends_on  - choice:  x,y,z
x
/f_variable_determined  - choice:  u,v,w, p,k
w
/superposition  0 - overwrite, 1 - add, 2 - multiply
0
/time bounds [a], if any -  write 0, 0 for eternity; e.g. 0, 1.d6 makes condition only valid for first 1 Ma
0, 0
/number of segments to follow - not determined automatically
3
/polynomial lines, matching number above
0, 20000,0,             0,   2.5e-8
20000, 60000,20000,          5e-4
60000, 80500,60000,     5e-4, -2.5e-8
//---------------- block 1


//---------------- block 2
/f_input_type
p
/f_depends_on  - choice:  x,y,z
y
/f_variable_determined  - choice:  u,v,w, p,k
w
/superposition  0 - overwrite, 1 - add, 2 - multiply
2
/time bounds [a], if any -  write 0, 0 for eternity; e.g. 0, 1.d6 makes condition only valid for first 1 Ma
0, 0
/number of segments to follow - not determined automatically
3
/polynomial lines, matching number above
0, 20000,0,             0,    5e-5
20000, 60000,20000,          1
60000, 80500,60000,         1,    -5e-5
//---------------- block 2
//-----------------------------------------------------------------------------------











//EXAMPLE FOUR
//decay signal
//---------------- block 1
/f_input_type
p
/f_depends_on  - choice:  x,y,z
x
/f_variable_determined  - choice:  u,v,w, p,k
w
/superposition  0 - overwrite, 1 - add, 2 - multiply
0
/time bounds [a], if any -  write 0, 0 for eternity; e.g. 0, 1.d6 makes condition only valid for first 1 Ma
0, 1e2
/number of segments to follow - not determined automatically
3
/polynomial lines, matching number above
0, 30000,0,             0
30000, 50000,30000,          5e-4
50000, 80500,50000,     0
//---------------- block 1


//---------------- block 2
/f_input_type
p
/f_depends_on  - choice:  x,y,z
y
/f_variable_determined  - choice:  u,v,w, p,k
w
/superposition  0 - overwrite, 1 - add, 2 - multiply
2
/time bounds [a], if any -  write 0, 0 for eternity; e.g. 0, 1.d6 makes condition only valid for first 1 Ma
0, 0
/number of segments to follow - not determined automatically
1
/polynomial lines, matching number above
0, 90000,0,             0.9995
//---------------- block 2
//-----------------------------------------------------------------------------------














//EXAMPLE FIVE
//decay signal, and build up a new one (overlay)
//---------------- block 1
/f_input_type
p
/f_depends_on  - choice:  x,y,z
x
/f_variable_determined  - choice:  u,v,w, p,k
w
/superposition  0 - overwrite, 1 - add, 2 - multiply
0
/time bounds [a], if any -  write 0, 0 for eternity; e.g. 0, 1.d6 makes condition only valid for first 1 Ma
0, 1e1
/number of segments to follow - not determined automatically
3
/polynomial lines, matching number above
0, 30000,0,             0
30000, 50000,30000,          5e-4
50000, 80500,50000,     0
//---------------- block 1


//---------------- block 2
/f_input_type
p
/f_depends_on  - choice:  x,y,z
y
/f_variable_determined  - choice:  u,v,w, p,k
w
/superposition  0 - overwrite, 1 - add, 2 - multiply
1
/time bounds [a], if any -  write 0, 0 for eternity; e.g. 0, 1.d6 makes condition only valid for first 1 Ma
0, 1e6
/number of segments to follow - not determined automatically
3
/polynomial lines, matching number above
0, 30000,0,             0
30000, 50000,30000,     5.15e-7
50000, 80500,50000,     0
//---------------- block 2


//---------------- block 3
/f_input_type
p
/f_depends_on  - choice:  x,y,z
y
/f_variable_determined  - choice:  u,v,w, p,k
w
/superposition  0 - overwrite, 1 - add, 2 - multiply
2
/time bounds [a], if any -  write 0, 0 for eternity; e.g. 0, 1.d6 makes condition only valid for first 1 Ma
0, 9.5e5
/number of segments to follow - not determined automatically
3
/polynomial lines, matching number above
0, 30000,0,             0.9995
30000, 50000,30000,     0.998975
50000, 80500,50000,     0.9995
//---------------- block 3


//---------------- block 4
/f_input_type
p
/f_depends_on  - choice:  x,y,z
y
/f_variable_determined  - choice:  u,v,w, p,k
w
/superposition  0 - overwrite, 1 - add, 2 - multiply
0
/time bounds [a], if any -  write 0, 0 for eternity; e.g. 0, 1.d6 makes condition only valid for first 1 Ma
9.52e5, 1e12
/number of segments to follow - not determined automatically
3
/polynomial lines, matching number above
0, 30000,0,             0
30000, 50000,30000,     5e-4
50000, 80500,50000,     0
//---------------- block 4






//EXAMPLE SIX
//reading two flat rasters for initial topography and uplift
//---------------- raster block 1
/f_input_type
R
/raster filename
dac_topo1.txt
/f_raster_format : 0 - plain text,  1 - asc, 2 - csv
0
/f_variable_determined  - choice:  u,v,w, p,k
z
/superposition  0 - overwrite, 1 - add, 2 - multiply
1
/time bounds [a], if any -  write 0, 0 for eternity; e.g. 0, 1.d6 makes condition only valid for first 1 Ma
0, 0.1
/margin exceedance - use to set conditions where DAC is advected to. Left, right, front(bottom), back(top)
0, 0, 0, 0
//---------------- raster block 1

//---------------- raster block 2
/f_input_type
R
/raster filename
dac_uplift1.txt
/f_raster_format : 0 - plain text,  1 - asc, 2 - csv
0
/f_variable_determined  - choice:  u,v,w, p,k
w
/superposition  0 - overwrite, 1 - add, 2 - multiply
0
/time bounds [a], if any -  write 0, 0 for eternity; e.g. 0, 1.d6 makes condition only valid for first 1 Ma
0,0
/margin exceedance - use to set conditions where DAC is advected to. Left, right, front(bottom), back(top)
0, 0, 0, 0
//---------------- raster block 2
